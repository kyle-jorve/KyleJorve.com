@inherits Umbraco.Web.Mvc.UmbracoTemplatePage

@{
    var homePgID = 1081;
    var portfolioPgID = 1082;
    var portfolioItems = Umbraco.Content(portfolioPgID).Children.OrderBy("pubDate desc");
    int homePgLimit = Umbraco.Content(homePgID).portfolioLimit;
}


@if (CurrentPage.Id == homePgID)
{
    <div class="portfolioGrid" id="@(CurrentPage.Id == homePgID ? Umbraco.Content(homePgID).portfolioHeading.ToString().ToLower().Replace(" ", "-") : null)">
        @for (var i = 0; i < homePgLimit; i++)
        {
            var itemType = portfolioItems[i].portfolioItemType.ToString().ToLower().Replace(' ', '-');
            var imgCollection = portfolioItems[i].GetPropertyValue<IEnumerable<IPublishedContent>>("portfolioItemImages");
            var yPos = portfolioItems[i].imgVertPos;

            if (imgCollection != null)
            {
                var img = Umbraco.Media(imgCollection.ToArray()[0].Id);
                decimal imgWidth = img.GetPropertyValue<decimal>("umbracoWidth");
                decimal imgHeight = img.GetPropertyValue<decimal>("umbracoHeight");
                var aspect = imgWidth / imgHeight;
                string itemClass = string.Empty;

                //define itemClass
                if (aspect > 1.333M)
                {
                    itemClass = "wide";
                }
                else if (aspect < 0.875M)
                {
                    itemClass = "tall";
                }

                <div class="portfolioItem @itemType @itemClass animatedEl" style="background-image:url('@(img.Url)'); background-position:center @yPos;">
                    <div class="iconRow">
                        <a href="@portfolioItems[i].Url" class="description">
                            <i class="fas fa-align-left"></i>
                        </a>
                        <div class="full-screen openLightbox" data-src="@img.Url">
                            <i class="fas fa-expand"></i>
                        </div>
                    </div>
                    <a class="portfolioLink" href="@portfolioItems[i].Url"></a>
                </div>
            }
        }
    </div>
}
else
{
    var catsDropdown = ApplicationContext.Services.DataTypeService.GetDataTypeDefinitionByName("Portfolio Type Dropdown List");
    var cats = ApplicationContext.Services.DataTypeService.GetPreValuesCollectionByDataTypeId(catsDropdown.Id).PreValuesAsDictionary.Select(x => x.Value).ToList();

    foreach (var item in cats)
    {
        var catID = item.Value.ToLower().Replace(' ', '-');

        <div class="portfolioCatWrp" id="@catID">
            <h2 class="mobileHeading">@item.Value</h2>
            <div class="portfolioGrid">
                @for (var i = 0; i < portfolioItems.Count(); i++)
                {
                    if (portfolioItems[i].portfolioItemType == item.Value)
                    {
                        var itemType = portfolioItems[i].portfolioItemType.ToString().ToLower().Replace(' ', '-');
                        var imgCollection = portfolioItems[i].GetPropertyValue<IEnumerable<IPublishedContent>>("portfolioItemImages");
                        var yPos = portfolioItems[i].imgVertPos;

                        if (imgCollection != null)
                        {
                            var img = Umbraco.Media(imgCollection.ToArray()[0].Id);
                            decimal imgWidth = img.GetPropertyValue<decimal>("umbracoWidth");
                            decimal imgHeight = img.GetPropertyValue<decimal>("umbracoHeight");
                            var aspect = imgWidth / imgHeight;
                            string itemClass = string.Empty;

                            //define itemClass
                            if (aspect > 1.333M)
                            {
                                itemClass = "wide";
                            }
                            else if (aspect < 0.875M)
                            {
                                itemClass = "tall";
                            }

                            <div class="portfolioItem @itemType @itemClass" style="background-image:url('@(img.Url)'); background-position:center @yPos;">
                                <div class="iconRow">
                                    <a href="@portfolioItems[i].Url" class="icon description">
                                        <i class="fas fa-align-left"></i>
                                    </a>
                                    <div class="icon full-screen openLightbox" data-src="@img.Url">
                                        <i class="fas fa-expand"></i>
                                    </div>
                                </div>
                                <a class="portfolioLink" href="@portfolioItems[i].Url"></a>
                            </div>
                        }
                    }
                }
            </div>
        </div>
    }
}